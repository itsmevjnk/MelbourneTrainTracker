#!/usr/bin/env python3

import os
import csv

mappings: list[tuple[int, str]] = []

while True:
    fname = input('Enter the path to the stops.txt file to be added to table (or leave empty to finish): ')
    if not fname:
        break
    try:
        with open(fname, newline='', encoding='utf-8-sig') as f:
            reader = csv.DictReader(f)
            for row in reader:
                stop_id: str = row['stop_id']
                if stop_id.isdigit():
                    station: str = row['parent_station']
                    if len(station) == 0:
                        print(f'Stop ID {stop_id} does not have a parent station, skipping')
                        continue
                    mappings.append((int(stop_id), station[9:12])) # extract 3 letter ID
    except FileNotFoundError:
        print(f'File not found: {fname}')
    except Exception as e:
        print(f'Error reading {fname}: {e}')

mappings.sort(key=lambda item: item[0])

with open(os.path.join(os.path.dirname(__file__), 'main', 'src', 'lsid_table.cpp'), 'w') as f:
    f.write(
        '/* AUTOGENERATED BY generate_stopid_table.py - DO NOT MODIFY */\n'
        + '#include "lsid.h"\n'
        + f'const size_t LSID::kStopIDTableLength = {len(mappings)};\n'
        + 'const struct LSID::StopIDTableEntry LSID::kStopIDTable[] = {\n'
    )
    for (key, value) in mappings:
        f.write(f'\t{{ {key}, INFRAID("{value}") }},\n')
    f.write('};\n')
print('File has been written successfully')